#spring.datasource.url = jdbc:mysql://localhost:3306/shippo_delivery?useSSL=false
#spring.datasource.username = root
#spring.datasource.password =
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## Fix Postgres JPA Error:
#Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
#
## ===============================
## = JPA / HIBERNATE
## ===============================
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:postgresql://localhost:5432/demosecurity
#spring.datasource.username= demo
#spring.datasource.password= 123
#
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:postgresql://192.168.2.253:5433/delivery_service
#spring.datasource.username= postgres
#spring.datasource.password= 123456

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
